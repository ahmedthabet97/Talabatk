// <auto-generated />
using System;
using E_CommerceDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_CommerceDB.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_CommerceDB.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic Devices",
                            IsDeleted = false,
                            Name = "Electronic",
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3064),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3065)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Electronic Devices",
                            IsDeleted = false,
                            Name = "Clothes",
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3104),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3106)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Electronic Devices",
                            IsDeleted = false,
                            Name = "goods",
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3125),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3126)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Complaints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Noted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("E_CommerceDB.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Disc_Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "gg",
                            Disc_Percent = 10m,
                            IsDeleted = false,
                            Name = "hh",
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7190),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7192)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("E_CommerceDB.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SelledQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 5,
                            SelledQuantity = 0,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(6959),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(6975)
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 5,
                            SelledQuantity = 0,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7137),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7140)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.Order_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Payment_id")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User_id");

                    b.ToTable("Order_Details", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("Order_Details_id")
                        .HasColumnType("int");

                    b.Property<int>("Product_id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Order_Details_id");

                    b.HasIndex("Product_id");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SelledQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubCategories_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("discount_Id")
                        .HasColumnType("int");

                    b.Property<int>("inventory_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("ratingCount")
                        .HasColumnType("int");

                    b.Property<int>("totalRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SellyerId");

                    b.HasIndex("SubCategories_Id");

                    b.HasIndex("discount_Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Samsung Phone",
                            IsDeleted = false,
                            Name = "Samasung A32",
                            Price = 5000,
                            Progress = 0,
                            Quantity = 0,
                            SelledQuantity = 0,
                            SubCategories_Id = 2,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7243),
                            deleted_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount_Id = 1,
                            inventory_Id = 2,
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7245),
                            ratingCount = 0,
                            totalRating = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Samsung Phone",
                            IsDeleted = false,
                            Name = "Samasung A52",
                            Price = 6000,
                            Progress = 0,
                            Quantity = 0,
                            SelledQuantity = 0,
                            SubCategories_Id = 2,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7282),
                            deleted_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount_Id = 1,
                            inventory_Id = 2,
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7285),
                            ratingCount = 0,
                            totalRating = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Samsung Phone",
                            IsDeleted = false,
                            Name = "Samasung A72",
                            Price = 7000,
                            Progress = 0,
                            Quantity = 0,
                            SelledQuantity = 0,
                            SubCategories_Id = 2,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7316),
                            deleted_at = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount_Id = 1,
                            inventory_Id = 1,
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 450, DateTimeKind.Local).AddTicks(7318),
                            ratingCount = 0,
                            totalRating = 0
                        });
                });

            modelBuilder.Entity("E_CommerceDB.SubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Samsung",
                            CategoryId = 1,
                            IsDeleted = false,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3156),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3158)
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Appile",
                            CategoryId = 1,
                            IsDeleted = false,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3183),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3184)
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Keriaze",
                            CategoryId = 3,
                            IsDeleted = false,
                            created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3200),
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3201)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilieImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "29e4ca1b-8ee6-4673-a2a0-edd9e13ff7a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f6a995ac-1d20-4e11-8e4e-aeea7006c376",
                            Created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3222),
                            Email = "Eslam@ss.com",
                            EmailConfirmed = false,
                            First_Name = "Mohamed",
                            IsDeleted = false,
                            Last_Name = "Ahmed",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilieImage = "https://www.w3schools.com/w3images/avatar3.png",
                            SecurityStamp = "b9e0e8d2-8435-493d-bc06-cd59f0d506ac",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3223)
                        },
                        new
                        {
                            Id = "7ebb6a47-0e47-47dc-9e99-b5e9e97c7a4d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c9676ff3-67df-40da-8a12-8d681a8a4e9e",
                            Created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3260),
                            Email = "Eslam@ss.com",
                            EmailConfirmed = false,
                            First_Name = "Mohamed",
                            IsDeleted = false,
                            Last_Name = "Ahmed",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilieImage = "https://www.w3schools.com/w3images/avatar3.png",
                            SecurityStamp = "d4f9f92c-fdfe-458a-92b2-4694a361efe2",
                            TwoFactorEnabled = false,
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3262)
                        },
                        new
                        {
                            Id = "40433371-b40b-49ea-b622-a9ae5bea9951",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6230ec33-10eb-4c92-9045-35051000625a",
                            Created_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3291),
                            Email = "Eslam@ss.com",
                            EmailConfirmed = false,
                            First_Name = "Ahmed",
                            IsDeleted = false,
                            Last_Name = "Amir",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilieImage = "https://www.w3schools.com/w3images/avatar3.png",
                            SecurityStamp = "bb98bf46-3503-415d-9239-beb0b78ae8bf",
                            TwoFactorEnabled = false,
                            modified_at = new DateTime(2022, 12, 23, 23, 56, 44, 447, DateTimeKind.Local).AddTicks(3292)
                        });
                });

            modelBuilder.Entity("E_CommerceDB.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("address_line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postal_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("user_id");

                    b.ToTable("User_Address", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "26f3b367-99cc-4339-ad51-14d53f3ebd8f",
                            ConcurrencyStamp = "3c88d56a-9f6a-4a78-9455-545bcbe009ca",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "48d31b7c-b1ec-4c9a-9944-2220df67a23b",
                            ConcurrencyStamp = "b01096d0-04c5-427d-a258-3cad26f6a72a",
                            Name = "Seller"
                        },
                        new
                        {
                            Id = "d8a82c65-fad7-4ba9-8424-57b32597bb25",
                            ConcurrencyStamp = "fdf7969c-e3d6-4ad7-8807-32bc07bee35c",
                            Name = "Buyer"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("E_CommerceDB.Complaints", b =>
                {
                    b.HasOne("E_CommerceDB.User", "Buyer")
                        .WithMany("ComplaintsBuyer")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_CommerceDB.Product", "Product")
                        .WithMany("Complaints")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.User", "Seller")
                        .WithMany("ComplaintsSeller")
                        .HasForeignKey("SellerId");

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("E_CommerceDB.Images", b =>
                {
                    b.HasOne("E_CommerceDB.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_CommerceDB.Order_Details", b =>
                {
                    b.HasOne("E_CommerceDB.User", "user")
                        .WithMany("Order_Details")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_CommerceDB.OrderItems", b =>
                {
                    b.HasOne("E_CommerceDB.Order_Details", "Order_Details")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Details_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order_Details");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_CommerceDB.Product", b =>
                {
                    b.HasOne("E_CommerceDB.Inventory", null)
                        .WithMany("products")
                        .HasForeignKey("InventoryId");

                    b.HasOne("E_CommerceDB.User", "Sellyer")
                        .WithMany()
                        .HasForeignKey("SellyerId");

                    b.HasOne("E_CommerceDB.SubCategories", "SubCategories")
                        .WithMany("products")
                        .HasForeignKey("SubCategories_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.Discount", "discount")
                        .WithMany("products")
                        .HasForeignKey("discount_Id");

                    b.Navigation("Sellyer");

                    b.Navigation("SubCategories");

                    b.Navigation("discount");
                });

            modelBuilder.Entity("E_CommerceDB.SubCategories", b =>
                {
                    b.HasOne("E_CommerceDB.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_CommerceDB.UserAddress", b =>
                {
                    b.HasOne("E_CommerceDB.User", "user")
                        .WithMany("UserAddress")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("E_CommerceDB.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_CommerceDB.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("E_CommerceDB.Discount", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_CommerceDB.Inventory", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_CommerceDB.Order_Details", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("E_CommerceDB.Product", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("Images");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("E_CommerceDB.SubCategories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("E_CommerceDB.User", b =>
                {
                    b.Navigation("ComplaintsBuyer");

                    b.Navigation("ComplaintsSeller");

                    b.Navigation("Order_Details");

                    b.Navigation("UserAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
